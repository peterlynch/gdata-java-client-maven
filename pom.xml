<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <!-- see http://code.google.com/p/google-maven-repository/wiki/GuidelinesForGoogleMavenProjects -->
  <parent>
    <groupId>com.google</groupId>
    <artifactId>google</artifactId>
    <version>1</version>
  </parent>

  <groupId>com.google.gdata</groupId>
  <artifactId>gdata</artifactId>
  <version>1-SNAPSHOT</version>
  <packaging>pom</packaging>


  <name>gdata</name>
  <description>This project should be inherited by every language implementation of the GData APIs</description>

  <inceptionYear>2007</inceptionYear>

  <developers>
    <!-- add developers as required -->
    <!--
    <developer>
      <id>api.rboyd</id>
      <name>api.rboyd</name>
      <email></email>
      <timezone></timezone>
    </developer>
    -->
  </developers>

  <!-- Contributors go here -->

  <!-- no mailing lists -->

  <prerequisites>
    <maven>${requiredMavenVersion}</maven>
  </prerequisites>

  <!-- add other language specific modules might go here -->
  <modules>
    <module>java</module>
  </modules>

  <scm>
    <connection>scm:svn:http://gdata-java-client.googlecode.com/svn/trunk/</connection>
    <!-- change this it is likely not correct -->
    <developerConnection>scm:svn:http://gdata-java-client.googlecode.com/svn/trunk/</developerConnection>
    <url>http://code.google.com/p/gdata-java-client/source/browse/#svn/trunk</url>
  </scm>
  <issueManagement>
    <system>code.google.com</system>
    <url>http://code.google.com/p/gdata-java-client/issues/list</url>
  </issueManagement>

  <properties>
    <javac.source>1.6</javac.source>
    <javac.target>1.6</javac.target>
    <javadoc.target>1.6</javadoc.target>
    <compiler.compilerVersion>1.6</compiler.compilerVersion>
    <!-- if you change this change prerequisites as well -->
    <requiredMavenVersion>2.2.1</requiredMavenVersion>
    <requiredMavenJavaVersion>1.6</requiredMavenJavaVersion>
    <!-- default reporting encodings see http://www.sonatype.com/people/2009/11/special-character-encoding-properties/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+sonatype+%28Sonatype+Blogs%29&utm_content=Google+Reader -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <!-- google repo is mirrored to central -->

  <!-- manage plugin versions those here are either in the super pom already or are needed for best practice -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-ant-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-archetype-plugin</artifactId>
          <version>2.0-alpha-4</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.2-beta-4</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.0.2</version>
          <configuration>
            <source>${javac.source}</source>
            <target>${javac.target}</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-ear-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <downloadSources>true</downloadSources>
            <downloadJavadocs>true</downloadJavadocs>
            <!-- <wtpversion>1.5</wtpversion> -->
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.0-beta-1</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>${requiredMavenVersion}</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>${requiredMavenJavaVersion}</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-help-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <archive>
              <addMavenDescriptor>true</addMavenDescriptor>
              <manifest>
                <addClasspath>true</addClasspath>
                <addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.6.1</version>
          <configuration>
            <source>${javadoc.source}</source>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-Build>${buildNumber}</Implementation-Build>
                <Implementation-Branch>${scmBranch}</Implementation-Branch>
                <Implementation-BuildEnv>${build.env}</Implementation-BuildEnv>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-rar-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.0-beta-9</version>
          <configuration>
            <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
            <!-- excluding site-deploy for now -->
            <goals>deploy</goals>
            <!-- make sure release profile always gets executed when executing release goals -->
            <arguments>-Prelease-profile</arguments>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.1</version>
          <configuration>
            <archive>
              <addMavenDescriptor>true</addMavenDescriptor>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-Build>${buildNumber}</Implementation-Build>
                <Implementation-Branch>${scmBranch}</Implementation-Branch>
                <Implementation-BuildEnv>${build.env}</Implementation-BuildEnv>
              </manifestEntries>
            </archive>
          </configuration>
          <executions>
            <!-- here we override the super-pom attach-sources executionid which
            calls sources:jar goal. That goals forks the lifecycle, causing
            the generate-sources phase to be called twice for the install goal.
            This causes any other plugin bound to the generate-sources phase to
            be called twice which usually has nasty side effects, let alone
            creating duplicate processing and longer build times. -->
            <execution>
              <id>attach-sources</id>
              <phase>DISABLE_FORKED_LIFECYCLE_MSOURCES-13</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.4.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.1-beta-1</version>
          <configuration>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-Build>${buildNumber}</Implementation-Build>
                <Implementation-Branch>${scmBranch}</Implementation-Branch>
                <Implementation-BuildEnv>${build.env}</Implementation-BuildEnv>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>apt-maven-plugin</artifactId>
          <version>1.0-alpha-4-SNAPSHOT</version>
        </plugin>
        <plugin>
          <!-- see  http://commons.ucalgary.ca/projects/buildnumber-maven-plugin/index.html -->
          <!-- http://mojo.codehaus.org/buildnumber-maven-plugin/ -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.0-beta-4</version>
          <executions>
            <execution>
              <id>buildnumber-one</id>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
              <configuration>
                <revisionOnScmFailure>UNKNOWN_REVISION</revisionOnScmFailure>
                <providerImplementations>
                  <svn>javasvn</svn>
                </providerImplementations>
              </configuration>
            </execution>
            <execution>
              <id>buildnumber-two</id>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
              <configuration>
                <format>r${buildNumber} {0,date,yyyy-MM-dd'T'HH:mm:ss.SSSZ}</format>
                <items>
                  <item>timestamp</item>
                </items>
                <revisionOnScmFailure>UNKNOWN_REVISION</revisionOnScmFailure>
                <providerImplementations>
                  <svn>javasvn</svn>
                </providerImplementations>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>native2ascii-maven-plugin</artifactId>
          <version>1.0-alpha-1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>tomcat-maven-plugin</artifactId>
          <version>1.0-beta-1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>1.1</version>
        </plugin>
        <plugin>
          <groupId>org.jvnet.jaxb2.maven2</groupId>
          <artifactId>maven-jaxb2-plugin</artifactId>
          <version>0.7.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!-- no reporting -->

  <profiles>
    <!-- ======================== end filter profiles ====================== -->
    <!-- aggregate any release info in this profile ( defined in super-pom )
      see maven-release-plugin property 'useReleaseProfile'  -->
    <!-- MSOURCES-13 related workaround overriding super-pom -->
    <profile>
      <id>release-profile</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <inherited>true</inherited>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources-no-fork</id>
                <inherited>true</inherited>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- buildnumber as a profile in case svn command line cannot be executed for
      some reason, since to do a proper release requires svn command line client
      trigger the activation with the 'performRelease' property that the
      maven-release-plugin sets to true. See
      http://maven.apache.org/guides/introduction/introduction-to-the-pom.html
      and maven-release-plugin property 'useReleaseProfile' -->
    <profile>
      <id>buildnumber</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
        <!--
        <file>
          <exists>.svn</exists>
        </file>
        -->
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- if a jdk version less than default, adjust relevant properties to minimum -->
    <profile>
      <id>jdk15</id>
      <activation>
        <jdk>[1.5,1.6)</jdk>
      </activation>
      <properties>
        <javac.source>1.5</javac.source>
        <javac.target>1.5</javac.target>
        <javadoc.source>1.5</javadoc.source>
        <compiler.compilerVersion>1.5</compiler.compilerVersion>
      </properties>
    </profile>

  </profiles>

</project>